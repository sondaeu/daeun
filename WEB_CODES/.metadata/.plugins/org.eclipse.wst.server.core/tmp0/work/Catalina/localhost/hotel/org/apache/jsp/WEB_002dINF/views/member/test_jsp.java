/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.60
 * Generated at: 2020-12-16 03:52:28 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class test_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/WEB_CODES/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Petopia/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1607397061812L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<title>개인회원가입</title>\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js\"></script>\r\n");
      out.write("<!-- 부트스트랩 -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/bootstrap.min.css\">\r\n");
      out.write("<!-- daum 도로명주소 찾기 api -->\r\n");
      out.write("<script src=\"http://dmaps.daum.net/map_js_init/postcode.v2.js\"></script>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("td {\r\n");
      out.write("\tborder: 1px solid #000000;\r\n");
      out.write("\tborder-collapse: collapse;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\t// 모든 공백 체크 정규식\r\n");
      out.write("\tvar regexpEmpty = /\\s/g;\r\n");
      out.write("\t// 아이디 정규식\r\n");
      out.write("\tvar regexpId = /^[a-z0-9][a-z0-9_\\-]{4,19}$/;\r\n");
      out.write("\t// 비밀번호 정규식\r\n");
      out.write("\tvar regexpPassword = /^[A-Za-z0-9]{6,12}$/;\r\n");
      out.write("\t// 이름 정규식\r\n");
      out.write("\tvar regexpName = /^[가-힣]{2,4}|[a-zA-Z]{2,10}\\s[a-zA-Z]{2,10}$/;\r\n");
      out.write("\t// 이메일 검사 정규식\r\n");
      out.write("\tvar regexpEmail = /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i;\r\n");
      out.write("\t// 휴대폰 번호 정규식\r\n");
      out.write("\tvar regexpMobile = /^01([0|1|6|7|8|9]?)?([0-9]{3,4})?([0-9]{4})$/;\r\n");
      out.write("\t// 전화 번호 정규식\r\n");
      out.write("\tvar regexpPhone = /^0([1-6]{1,2})?([0-9]{3,4})?([0-9]{4})$/;\r\n");
      out.write("\t// 생년월일 정규식\r\n");
      out.write("\tvar regexpBirthday = false;\r\n");
      out.write("\t\r\n");
      out.write("\t$(document).ready(function() {\r\n");
      out.write("\t\tvar address = $('#detailaddress');\r\n");
      out.write("\t\t//아이디 중복확인\r\n");
      out.write("\t\t$(\"#id\").blur(function() {\r\n");
      out.write("\t\t\tif($('#id').val() == '') {\r\n");
      out.write("\t\t\t\t$('#id_check').text('아이디를 입력하세요');\r\n");
      out.write("\t\t\t\t$('#id_check').css('color', 'red');\r\n");
      out.write("\t\t\t} else if(regexpId.test($('#id').val()) != true) {\r\n");
      out.write("\t\t\t\t$('#id_check').text('4~12자의 영문 또는 숫자만 사용 가능합니다');\r\n");
      out.write("\t\t\t\t$('id_check').css('color', 'red');\r\n");
      out.write("\t\t\t} else if($('#id').val() != '') {\r\n");
      out.write("\t\t\t\tvar id=$('#id').val();\r\n");
      out.write("\t\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\t\tasync : true,\r\n");
      out.write("\t\t\t\t\ttype : 'POST',\r\n");
      out.write("\t\t\t\t\tdata : id, //mem_id라는 이름으로 mem_id라는 데이터를 @WebServlet(\"/idsearch.do\")에 보내겠다\r\n");
      out.write("\t\t\t\t\turl : 'idcheck',\r\n");
      out.write("\t\t\t\t\tdateType: 'json',\r\n");
      out.write("\t\t\t\t\tcontentType: \"application/json; charset=UTF-8\",\r\n");
      out.write("\t\t\t\t\tsuccess : function(data) {\r\n");
      out.write("\t\t\t\t\t\tif(data.cnt > 0) {\r\n");
      out.write("\t\t\t\t\t\t\t$('#id_check').text('중복된 아이디 입니다');\r\n");
      out.write("\t\t\t\t\t\t\t$('#id_check').css('color', 'red');\r\n");
      out.write("\t\t\t\t\t\t\t$(\"#usercheck\").attr(\"disabled\", true);\r\n");
      out.write("\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\tif(regexpId.test(id)){\r\n");
      out.write("\t\t\t\t\t\t\t\t$('#id_check').text('사용가능한 아이디 입니다');\r\n");
      out.write("\t\t\t\t\t\t\t\t$('#id_check').css('color', 'blue');\r\n");
      out.write("\t\t\t\t\t\t\t\t$(\"#usercheck\").attr(\"disabled\", false);\r\n");
      out.write("\t\t\t\t\t\t\t} else if(id == '') {\r\n");
      out.write("\t\t\t\t\t\t\t\t$('#id_check').text('아이디를 입력해주세요');\r\n");
      out.write("\t\t\t\t\t\t\t\t$('#id_check').css('color', 'red');\r\n");
      out.write("\t\t\t\t\t\t\t\t$(\"#usercheck\").attr(\"disabled\", true);\r\n");
      out.write("\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t$('#id_check').text(\"아이디는 소문자와 숫자 4~12자리만 가능합니다\");\r\n");
      out.write("\t\t\t\t\t\t\t\t$('#id_check').css('color', 'red');\r\n");
      out.write("\t\t\t\t\t\t\t\t$(\"#usercheck\").attr(\"disabled\", true);\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$('form').on('submit',function(){\r\n");
      out.write("\t\t\tvar inval_Arr = new Array(8).fill(false);\r\n");
      out.write("\t\t\tif (regexpId.test($('#id').val())) {\r\n");
      out.write("\t\t\t\tinval_Arr[0] = true;\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\tinval_Arr[0] = false;\r\n");
      out.write("\t\t\t\talert('아이디를 확인하세요');\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t// 비밀번호가 같은 경우 && 비밀번호 정규식\r\n");
      out.write("\t\t\tif (($('#password').val() == ($('#password2').val())) && regexpPassword.test($('#password').val())) {\r\n");
      out.write("\t\t\t\tinval_Arr[1] = true;\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\tinval_Arr[1] = false; \r\n");
      out.write("\t\t\t\talert('비밀번호를 확인하세요'); \r\n");
      out.write("\t\t\t\treturn false; \r\n");
      out.write("\t\t\t} \r\n");
      out.write("\t\t\t// 이름 정규식 \r\n");
      out.write("\t\t\tif (regexpName.test($('#name').val())) {\r\n");
      out.write("\t\t\t\tinval_Arr[2] = true;\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\tinval_Arr[2] = false;\r\n");
      out.write("\t\t\t\talert('이름을 확인하세요');\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t// 생년월일 정규식\r\n");
      out.write("\t\t\tif (regexpBirth) {\r\n");
      out.write("\t\t\t\tconsole.log(regexpBirth);\r\n");
      out.write("\t\t\t\tinval_Arr[3] = true; \r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\tinval_Arr[3] = false;\r\n");
      out.write("\t\t\t\talert('생년월일을 확인하세요');\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t// 이메일 정규식\r\n");
      out.write("\t\t\tif (regexpEmail.test($('#email').val())) {\r\n");
      out.write("\t\t\t\tconsole.log(regexpEmail.test($('#email').val()));\r\n");
      out.write("\t\t\t\tinval_Arr[4] = true;\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\tinval_Arr[4] = false;\r\n");
      out.write("\t\t\t\talert('이메일을 확인하세요');\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t} \r\n");
      out.write("\t\t\t// 휴대폰번호 정규식\r\n");
      out.write("\t\t\tif (regexpMobile.test($('#moblie').val())) { \r\n");
      out.write("\t\t\t\tconsole.log(regexpMobile.test($('#moblie').val()));\r\n");
      out.write("\t\t\t\tinval_Arr[5] = true; \r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\tinval_Arr[5] = false;\r\n");
      out.write("\t\t\t\talert('휴대폰 번호를 확인하세요');\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t//성별 확인\r\n");
      out.write("\t\t\tif(member.mem_gender[0].checked == false && member.mem_gender[1].checked == false) {\r\n");
      out.write("\t\t\t\tinval_Arr[6] = false;\r\n");
      out.write("\t\t\t\talert('성별을 확인하세요');\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\tinval_Arr[6] = true;\r\n");
      out.write("\t\t\t} \r\n");
      out.write("\t\t\t// 주소확인\r\n");
      out.write("\t\t\tif(address.val() == '') {\r\n");
      out.write("\t\t\t\tinval_Arr[7] = false;\r\n");
      out.write("\t\t\t\talert('주소를 확인하세요');\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\tinval_Arr[7] = true; \r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t// 전체 유효성 검사\r\n");
      out.write("\t\t\tvar validAll = true;\r\n");
      out.write("\t\t\tfor(var i = 0; i < inval_Arr.length; i++) {\r\n");
      out.write("\t\t\t\tif(inval_Arr[i] == false) {\r\n");
      out.write("\t\t\t\t\tvalidAll = false;\r\n");
      out.write("\t\t\t\t} \r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t// 유효성 모두 통과 \r\n");
      out.write("\t\t\tif(validAll == true) {\r\n");
      out.write("\t\t\t\talert('회원가입이 완료되었습니다');\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\talert('정보를 다시 확인하세요')\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$('#id').blur(function() {\r\n");
      out.write("\t\t\tif (regexpId.test($('#id').val())) {\r\n");
      out.write("\t\t\t\tconsole.log('true');\r\n");
      out.write("\t\t\t\t$('#id_check').text('');\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\tconsole.log('false');\r\n");
      out.write("\t\t\t\t$('#id_check').text('5~20자의 영문 소문자, 숫자와 특수기호\\'_\\', \\'-\\'만 사용 가능합니다');\r\n");
      out.write("\t\t\t\t$('#id_check').css('color', 'red');\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$('#password').blur(function() {\r\n");
      out.write("\t\t\tif (regexpPassword.test($('#password').val())) {\r\n");
      out.write("\t\t\t\tconsole.log('true');\r\n");
      out.write("\t\t\t\t$('#password_check').text('');\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\tconsole.log('false');\r\n");
      out.write("\t\t\t\t$('#password_check').text('6~12자의 숫자, 문자로만 사용 가능합니다');\r\n");
      out.write("\t\t\t\t$('#pw_check').css('color', 'red');\r\n");
      out.write("\t\t\t} \r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//1~2 패스워드 일치 확인\r\n");
      out.write("\t\t$('#password2').blur(function() {\r\n");
      out.write("\t\t\tif ($('#password').val() != $(this).val()) {\r\n");
      out.write("\t\t\t\t$('#password2_check').text('비밀번호가 일치하지 않습니다.');\r\n");
      out.write("\t\t\t\t$('#password2_check').css('color', 'red');\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\t$('#password2_check').text('');\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//이름에 특수문자 들어가지 않도록 설정\r\n");
      out.write("\t\t$(\"#name\").blur(function() {\r\n");
      out.write("\t\t\tif (regexpName.test($(this).val())) {\r\n");
      out.write("\t\t\t\tconsole.log(regexpName.test($(this).val()));\r\n");
      out.write("\t\t\t\t$(\"#name_check\").text('');\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\t$('#name_check').text('한글 2~4자 이내로 입력하세요(특수기호, 공백 사용불가)');\r\n");
      out.write("\t\t\t\t$('#name_check').css('color', 'red');\r\n");
      out.write("\t\t\t} \r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$(\"#email\").blur(function() { \r\n");
      out.write("\t\t\tif (regexpEmail.test($(this).val())) {\r\n");
      out.write("\t\t\t\t$(\"#email_check\").text('');\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\t$('#email_check').text('이메일 양식을 확인해주세요');\r\n");
      out.write("\t\t\t\t$('#email_check').css('color', 'red');\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}); \r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// 생일 유효성 검사 \r\n");
      out.write("\t\tvar regexpBirthday = false;\r\n");
      out.write("\t\t// 생년월일 regexpBirthday 유효성 검사\r\n");
      out.write("\t\t$('#birthday').blur(function() {\r\n");
      out.write("\t\t\tvar dateStr = $(this).val();\r\n");
      out.write("\t\t\tvar year = Number(dateStr.substr(0,4)); // 입력한 값의 0~4자리까지 (연)\r\n");
      out.write("\t\t\tvar month = Number(dateStr.substr(4,2)); // 입력한 값의 4번째 자리부터 2자리 숫자 (월)\r\n");
      out.write("\t\t\tvar day = Number(dateStr.substr(6,2)); // 입력한 값 6번째 자리부터 2자리 숫자 (일)\r\n");
      out.write("\t\t\tvar today = new Date(); // 날짜 변수 선언 \r\n");
      out.write("\t\t\tvar yearNow = today.getFullYear(); // 올해 연도 가져옴 \r\n");
      out.write("\t\t\tif (dateStr.length <=8) { // 연도의 경우 1900 보다 작거나 yearNow 보다 크다면 false를 반환합니다.\r\n");
      out.write("\t\t\t\tif (year > yearNow || year < 1900) {\r\n");
      out.write("\t\t\t\t\t$('#birthday_check').text('생년월일을 확인해주세요');\r\n");
      out.write("\t\t\t\t\t$('#birthday_check').css('color', 'red');\r\n");
      out.write("\t\t\t\t} else if (month < 1 || month > 12) {\r\n");
      out.write("\t\t\t\t\t$('#birthday_check').text('생년월일을 확인해주세요');\r\n");
      out.write("\t\t\t\t\t$('#birthday_check').css('color', 'red');\r\n");
      out.write("\t\t\t\t} else if (day < 1 || day > 31) {\r\n");
      out.write("\t\t\t\t\t$('#birthday_check').text('생년월일을 확인해주세요');\r\n");
      out.write("\t\t\t\t\t$('#birthday_check').css('color', 'red');\r\n");
      out.write("\t\t\t\t} else if ((month == 4 || month == 6 || month == 9 || month == 11) && day == 31) { \r\n");
      out.write("\t\t\t\t\t$('#birthday_check').text('생년월일을 확인해주세요');\r\n");
      out.write("\t\t\t\t\t$('#birthday_check').css('color', 'red');\r\n");
      out.write("\t\t\t\t} else if (month == 2) { \r\n");
      out.write("\t\t\t\t\tvar isleap = (year % 4 == 0 && (year % 100 != 0 || year % 400 == 0));\r\n");
      out.write("\t\t\t\t\tif (day > 29 || (day == 29 && !isleap)) {\r\n");
      out.write("\t\t\t\t\t\t$('#birthday_check').text('생년월일을 확인해주세요');\r\n");
      out.write("\t\t\t\t\t\t$('#birthday_check').css('color', 'red');\r\n");
      out.write("\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t$('#birthday_check').text('');\r\n");
      out.write("\t\t\t\t\t\tregexpBirthday = true; \r\n");
      out.write("\t\t\t\t\t} \r\n");
      out.write("\t\t\t\t} else { \r\n");
      out.write("\t\t\t\t\t$('#birthday_check').text('');\r\n");
      out.write("\t\t\t\t\tregexpBirthday = true;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\t//1.입력된 생년월일이 8자 초과할때 : auth:false \r\n");
      out.write("\t\t\t\t$('#birthday_check').text('생년월일을 확인해주세요');\r\n");
      out.write("\t\t\t\t$('#birthday_check').css('color', 'red');\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// 휴대전화\r\n");
      out.write("\t\t$('#mobile').blur(function(){ \r\n");
      out.write("\t\t\tif(regexpMoblie.test($(this).val())) { \r\n");
      out.write("\t\t\t\tconsole.log(regexpMoblie.test($(this).val()));\r\n");
      out.write("\t\t\t\t$(\"#mobile_check\").text('');\r\n");
      out.write("\t\t\t} else { \r\n");
      out.write("\t\t\t\t$('#mobile_check').text('휴대폰번호를 확인해주세요');\r\n");
      out.write("\t\t\t\t$('#mobile_check').css('color', 'red');\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t//우편번호 찾기 버튼 클릭시 발생 이벤트\r\n");
      out.write("\tfunction execPostCode() {\r\n");
      out.write("\t\tnew daum.Postcode({ \r\n");
      out.write("\t\t\toncomplete: function(data) { // 팝업에서 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분.\r\n");
      out.write("\t\t\t\t// 도로명 주소의 노출 규칙에 따라 주소를 조합한다.\r\n");
      out.write("\t\t\t\t// 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.\r\n");
      out.write("\t\t\t\tvar fullRoadAddr = data.roadAddress; // 도로명 주소 변수 \r\n");
      out.write("\t\t\t\tvar extraRoadAddr = ''; // 도로명 조합형 주소 변수\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t// 법정동명이 있을 경우 추가한다. (법정리는 제외) \r\n");
      out.write("\t\t\t\t// 법정동의 경우 마지막 문자가 \"동/로/가\"로 끝난다.\r\n");
      out.write("\t\t\t\tif(data.bname !== '' && /[동|로|가]$/g.test(data.bname)) { \r\n");
      out.write("\t\t\t\t\textraRoadAddr += data.bname; \r\n");
      out.write("\t\t\t\t} \r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t// 건물명이 있고, 공동주택일 경우 추가한다.\r\n");
      out.write("\t\t\t\tif(data.buildingName !== '' && data.apartment === 'Y') {\r\n");
      out.write("\t\t\t\t\textraRoadAddr += (extraRoadAddr !== '' ? ', ' + data.buildingName : data.buildingName);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t// 도로명, 지번 조합형 주소가 있을 경우, 괄호까지 추가한 최종 문자열을 만든다.\r\n");
      out.write("\t\t\t\tif(extraRoadAddr !== '') {\r\n");
      out.write("\t\t\t\t\textraRoadAddr = ' (' + extraRoadAddr + ')';\r\n");
      out.write("\t\t\t\t} \r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t// 도로명, 지번 주소의 유무에 따라 해당 조합형 주소를 추가한다.\r\n");
      out.write("\t\t\t\tif(fullRoadAddr !== '') { \r\n");
      out.write("\t\t\t\t\tfullRoadAddr += extraRoadAddr; \r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t// 우편번호와 주소 정보를 해당 필드에 넣는다.\r\n");
      out.write("\t\t\t\tconsole.log(data.zonecode);\r\n");
      out.write("\t\t\t\tconsole.log(fullRoadAddr);\r\n");
      out.write("\t\t\t\tvar a = console.log(data.zonecode);\r\n");
      out.write("\t\t\t\tvar b = console.log(fullRoadAddr);\r\n");
      out.write("\t\t\t\tif(a == null || b = null) { \r\n");
      out.write("\t\t\t\t\talert(\"주소를 확인하세요.\");\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t$(\"[name=zipcode]\").val(data.zonecode);\r\n");
      out.write("\t\t\t\t$(\"[name=address]\").val(fullRoadAddr);\r\n");
      out.write("\t\t\t\tdocument.getElementById('zipcode').value = data.zonecode; //5자리 새우편번호 사용\r\n");
      out.write("\t\t\t\tdocument.getElementById('address').value = fullRoadAddr;\r\n");
      out.write("\t\t\t\tdocument.getElementById('detailaddress').value = data.jibunAddress; \r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}).open();\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<article class=\"container\">\r\n");
      out.write("\t\t<div class=\"page-header\">\r\n");
      out.write("\t\t\t<div class=\"col-md-6 col-md-offset-3\">\r\n");
      out.write("\t\t\t\t<h3>회원가입</h3>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"col-sm-6 col-md-offset-3\">\r\n");
      out.write("\t\t\t<form action=\"join\" method=\"post\" role=\"form\" id=\"usercheck\" name=\"member\">\r\n");
      out.write("\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t<label for=\"id\">아이디</label>\r\n");
      out.write("\t\t\t\t\t<input type=\"text\" class=\"form-control\"\tid=\"id\" name=\"id\" placeholder=\"ID\">\r\n");
      out.write("\t\t\t\t\t<div class=\"eheck_font\" id=\"id_check\"></div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t<label for=\"password\">비밀번호</label>\r\n");
      out.write("\t\t\t\t\t<input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" placeholder=\"Password\">\r\n");
      out.write("\t\t\t\t\t<div class=\"eheck_font\" id=\"password_check\"></div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t<label for=\"password2\">비밀번호 확인</label>\r\n");
      out.write("\t\t\t\t\t<input type=\"password\" class=\"form-control\" id=\"password2\" name=\"password2\" placeholder=\"Confirm Password\">\r\n");
      out.write("\t\t\t\t\t<div class=\"eheck_font\" id=\"password2_check\"></div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t<label for=\"name\">이름</label>\r\n");
      out.write("\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"name\" name=\"name\" placeholder=\"Name\">\r\n");
      out.write("\t\t\t\t\t<div class=\"eheck_font\" id=\"name_check\"></div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t<label for=\"birthday\">생년월일</label>\r\n");
      out.write("\t\t\t\t\t<input type=\"tel\" class=\"form-control\" id=\"birthday\" name=\"birthday\" placeholder=\"ex) 20210101\">\r\n");
      out.write("\t\t\t\t\t<div class=\"eheck_font\" id=\"birthday_check\"></div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t<label for=\"email\">이메일 주소</label>\r\n");
      out.write("\t\t\t\t\t<input type=\"email\" class=\"form-control\" id=\"email\" name=\"email\" placeholder=\"E-mail\">\r\n");
      out.write("\t\t\t\t\t<div class=\"eheck_font\" id=\"email_check\"></div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t<label for=\"mobile\">휴대폰 번호('-'없이 번호만 입력해주세요)</label>\r\n");
      out.write("\t\t\t\t\t<input type=\"tel\" class=\"form-control\" id=\"mobile\" name=\"mobile\" placeholder=\"Phone Number\">\r\n");
      out.write("\t\t\t\t\t<div class=\"eheck_font\" id=\"mobile_check\"></div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t<label for=\"mem_gender\">성별</label>\r\n");
      out.write("\t\t\t\t\t<input type=\"checkbox\" id=\"mem_gender\" name=\"mem_gender\" value=\"남\">남\r\n");
      out.write("\t\t\t\t\t<input type=\"checkbox\" id=\"mem_gender\" name=\"mem_gender\" value=\"여\">여\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t<input class=\"form-control\" style=\"width: 40%; display: inline;\" placeholder=\"우편번호\" name=\"zipcode\" id=\"zipcode\" type=\"text\" readonly=\"readonly\">\r\n");
      out.write("\t\t\t\t\t<button type=\"button\" class=\"btn btn-default\" onclick=\"execPostCode();\">\r\n");
      out.write("\t\t\t\t\t<i class=\"fa fa-search\"></i>우편번호 찾기\r\n");
      out.write("\t\t\t\t\t</button>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t<input class=\"form-control\" style=\"top: 5px;\" placeholder=\"도로명 주소\" name=\"zipcode\" id=\"zipcode\" type=\"text\" readonly=\"readonly\" />\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t<input class=\"form-control\" placeholder=\"상세주소\" name=\"detailaddress\" id=\"detailaddress\" type=\"text\" />\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"form-group text-center\">\r\n");
      out.write("\t\t\t\t\t<button type=\"submit\" class=\"btn btn-primary\">회원가입</button>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</article>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
