/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.60
 * Generated at: 2021-01-08 06:34:17 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class user_002djoinus_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("/WEB-INF/views/member/header.jspf", Long.valueOf(1610087090126L));
    _jspx_dependants.put("jar:file:/C:/WEB_CODES/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Petopia/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1607397061812L));
    _jspx_dependants.put("jar:file:/C:/WEB_CODES/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Petopia/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\"></script>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write(".container {\r\n");
      out.write("\twidth: 1060px;\r\n");
      out.write("\tmargin: 0 auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".footer {\r\n");
      out.write("\theight: 100px;\r\n");
      out.write("\tbackground-color: blue;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".content{\r\n");
      out.write("\tmargin: 0 auto;\r\n");
      out.write("\twidth: 400px;\r\n");
      out.write("\tpadding: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".main label{\r\n");
      out.write("\tfont-size: 14px;\r\n");
      out.write("\tfont-weight: bold;\r\n");
      out.write("\tcolor: black;\r\n");
      out.write("}\r\n");
      out.write(".menu {\r\n");
      out.write("\tmargin-top: 20px;\r\n");
      out.write("\tmargin-bottom: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#userJoin{\r\n");
      out.write("\tbackground: #2e8de5;\r\n");
      out.write("    border: 1px solid #d9d9d9;\r\n");
      out.write("    color: #fff;\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    height: 60px;\r\n");
      out.write("    font-size: 24px;\r\n");
      out.write("    font-weight: bold;\r\n");
      out.write("    line-height: 60px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<meta charset=\"UTF-8\" />\r\n");
      out.write("<title>멍멍이의 하루 - 개인회원가입</title>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("var regexpEmpty = /\\s/g; //모든 공백 체크 정규식\r\n");
      out.write("var regexpId = /^[a-z0-9][a-z0-9_\\-]{3,12}$/; // 아이디 정규식\r\n");
      out.write("var regexpPassword = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/; // 비밀번호 정규식\r\n");
      out.write("var regexpName = /^[가-힣]{2,4}|[a-zA-Z]{2,10}\\s[a-zA-Z]{2,10}$/; // 이름 정규식\r\n");
      out.write("var regexpEmail = /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*[@]{1}[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*[.]{1}[a-zA-Z]{2,3}$/i; // 이메일 주소 정규식\r\n");
      out.write("\r\n");
      out.write("$(document).ready(function() {\r\n");
      out.write("\tvar arrInvalid = new Array(7).fill(false); // 유효성 검사\r\n");
      out.write("\t\r\n");
      out.write(" \t/* id 중복 검사 & 정규식 */\r\n");
      out.write("\t$('#id').blur(function() {\r\n");
      out.write("\t\tif($('#id').val() == '') {\r\n");
      out.write("\t\t\t$('#id_check').text('아이디를 입력하세요.');\r\n");
      out.write("\t\t\t$('#id_check').css('color', 'red');\r\n");
      out.write("\t\t\tarrInvalid[0] = false;\r\n");
      out.write("\t\t\tconsole.log(arrInvalid[0]);\r\n");
      out.write("\t\t} else if(!regexpId.test($('#id').val())) {\r\n");
      out.write("\t\t\t$('#id_check').text('4~12자의 영문 또는 숫자만 사용 가능합니다.');\r\n");
      out.write("\t\t\t$('#id_check').css('color', 'red');\r\n");
      out.write("\t\t\tarrInvalid[0] = false;\r\n");
      out.write("\t\t\tconsole.log(arrInvalid[0]);\r\n");
      out.write("\t\t} else if($('#id').val() != '') {\r\n");
      out.write("\t\t\tvar id = $('#id').val();\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\ttype : 'post',\r\n");
      out.write("\t\t\t\turl : 'member/idcheck/',\r\n");
      out.write("\t\t\t\theaders : {\r\n");
      out.write("\t\t\t\t\t'Content-Type' : 'application/json',\r\n");
      out.write("\t\t\t\t\t'X-HTTP-Method-Override' : 'POST'\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tdata : id,\r\n");
      out.write("\t\t\t\tsuccess : function(data) {\r\n");
      out.write("\t\t\t\t\tconsole.log(\"중복 id 수 = \" + data + \"개\");\r\n");
      out.write("\t\t\t\t\tif(data > 0) {\r\n");
      out.write("\t\t\t\t\t\t$('#id_check').text('중복된 아이디입니다.');\r\n");
      out.write("\t\t\t\t\t\t$('#id_check').css('color', 'red');\r\n");
      out.write("\t\t\t\t\t\tarrInvalid[0] = false;\r\n");
      out.write("\t\t\t\t\t\tconsole.log(arrInvalid[0]);\r\n");
      out.write("\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t$('#id_check').text('사용 가능한 아이디입니다.');\r\n");
      out.write("\t\t\t\t\t\t$('#id_check').css('color', 'blue');\r\n");
      out.write("\t\t\t\t\t\tarrInvalid[0] = true;\r\n");
      out.write("\t\t\t\t\t\tconsole.log(arrInvalid[0]);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t/* password 정규식 */\r\n");
      out.write("\t$('#password1').blur(function() {\r\n");
      out.write("\t\tif($('#password1').val() == '') {\r\n");
      out.write("\t\t\t$('#password1_check').text('비밀번호를 입력하세요.');\r\n");
      out.write("\t\t\t$('#password1_check').css('color', 'red');\r\n");
      out.write("\t\t} else if(!regexpPassword.test($('#password1').val())) {\r\n");
      out.write("\t\t\t$('#password1_check').text('최소 8자의 영문과 숫자 조합으로 사용 가능합니다.');\r\n");
      out.write("\t\t\t$('#password1_check').css('color', 'red');\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\t$('#password1_check').text('사용 가능한 비밀번호입니다.');\r\n");
      out.write("\t\t\t$('#password1_check').css('color', 'blue');\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t/* password 체크 */\r\n");
      out.write("\t$('#password2').blur(function() {\r\n");
      out.write("\t\tif($('#password2').val() == $('#password1').val()) {\r\n");
      out.write("\t\t\t$('#password2_check').text(' ');\r\n");
      out.write("\t\t\tarrInvalid[1] = true;\r\n");
      out.write("\t\t\tconsole.log(arrInvalid[1]);\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\t$('#password2_check').text('입력한 비밀번호가 일치하지 않습니다.');\r\n");
      out.write("\t\t\t$('#password2_check').css('color', 'red');\r\n");
      out.write("\t\t\tarrInvalid[1] = false;\r\n");
      out.write("\t\t\tconsole.log(arrInvalid[1]);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t/* 이름 체크 */\r\n");
      out.write("\t$('#name').blur(function() {\r\n");
      out.write("\t\tif($('#name').val() == '') {\r\n");
      out.write("\t\t\t$('#name_check').text('이름을 입력하세요.');\r\n");
      out.write("\t\t\t$('#name_check').css('color', 'red');\r\n");
      out.write("\t\t\tarrInvalid[2] = false;\r\n");
      out.write("\t\t\tconsole.log(arrInvalid[2]);\r\n");
      out.write("\t\t} else if(!regexpName.test($('#name').val())) {\r\n");
      out.write("\t\t\t$('#name_check').text('특수문자는 사용 불가능합니다.');\r\n");
      out.write("\t\t\t$('#name_check').css('color', 'red');\r\n");
      out.write("\t\t\tarrInvalid[2] = false;\r\n");
      out.write("\t\t\tconsole.log(arrInvalid[2]);\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\t$('#name_check').text(' ');\r\n");
      out.write("\t\t\tarrInvalid[2] = true;\r\n");
      out.write("\t\t\tconsole.log(arrInvalid[2]);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t/* email 정규식 */\r\n");
      out.write("\t$('#email').blur(function() {\r\n");
      out.write("\t\tif($('#email').val() == '') {\r\n");
      out.write("\t\t\t$('#email_check').text('이메일 주소를 입력하세요.');\r\n");
      out.write("\t\t\t$('#email_check').css('color', 'red');\r\n");
      out.write("\t\t\tarrInvalid[4] = false;\r\n");
      out.write("\t\t\tconsole.log(arrInvalid[4]);\r\n");
      out.write("\t\t} else if(!regexpEmail.test($('#email').val())) {\r\n");
      out.write("\t\t\t$('#email_check').text('유효한 이메일 주소를 입력하세요.');\r\n");
      out.write("\t\t\t$('#email_check').css('color', 'red');\r\n");
      out.write("\t\t\tarrInvalid[4] = false;\r\n");
      out.write("\t\t\tconsole.log(arrInvalid[4]);\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\t$('#email_check').text(' ');\r\n");
      out.write("\t\t\tarrInvalid[4] = true;\r\n");
      out.write("\t\t\tconsole.log(arrInvalid[4]);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t/* 휴대폰 번호 자동 하이픈 */\r\n");
      out.write("\tvar autoHypenMobile = function(num) {\r\n");
      out.write("\t      num = num.replace(/[^0-9]/g, '');\r\n");
      out.write("\t      var tmp = '';\r\n");
      out.write("\t      if(num.length < 4) {\r\n");
      out.write("\t          return num;\r\n");
      out.write("\t      } else if(num.length < 7) {\r\n");
      out.write("\t          tmp += num.substr(0, 3);\r\n");
      out.write("\t          tmp += '-';\r\n");
      out.write("\t          tmp += num.substr(3);\r\n");
      out.write("\t          return tmp;\r\n");
      out.write("\t      } else if(num.length < 11) {\r\n");
      out.write("\t          tmp += num.substr(0, 3);\r\n");
      out.write("\t          tmp += '-';\r\n");
      out.write("\t          tmp += num.substr(3, 3);\r\n");
      out.write("\t          tmp += '-';\r\n");
      out.write("\t          tmp += num.substr(6);\r\n");
      out.write("\t          return tmp;\r\n");
      out.write("\t      } else {              \r\n");
      out.write("\t          tmp += num.substr(0, 3);\r\n");
      out.write("\t          tmp += '-';\r\n");
      out.write("\t          tmp += num.substr(3, 4);\r\n");
      out.write("\t          tmp += '-';\r\n");
      out.write("\t          tmp += num.substr(7);\r\n");
      out.write("\t          return tmp;\r\n");
      out.write("\t      }\r\n");
      out.write("\t      return num;\r\n");
      out.write("\t}\r\n");
      out.write("\tvar mobileNum = document.getElementById('mobile');\r\n");
      out.write("\tmobileNum.onkeyup = function() {\r\n");
      out.write("\t\tconsole.log(this.value);\r\n");
      out.write("\t\tthis.value = autoHypenMobile(this.value);  \r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t/* 기타 반려동물 텍스트 박스 활성화 */\r\n");
      out.write("\t$(\"#animal3\").click(function() {\r\n");
      out.write("\t\tif(this.checked) {\r\n");
      out.write("\t\t\t$(\"#animal4\").attr(\"disabled\", false);\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\t$(\"#animal4\").attr(\"disabled\", true);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t/* 전체 반려동물 */\r\n");
      out.write("\t$(\"#userJoin\").click(function() {\r\n");
      out.write("\t\tvar totalAnimals = [];\r\n");
      out.write("\t\t$('input:checkbox[name=\"animal\"]').each(function() {\r\n");
      out.write("\t\t\tif(this.checked) {\r\n");
      out.write("\t\t\t\tif (this.id == \"animal3\") {\r\n");
      out.write("\t\t\t\t\ttotalAnimals.push($('#animal4').val());\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\telse {\r\n");
      out.write("\t\t\t\t\ttotalAnimals.push(this.value);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t$('#totalAnimals').val('');\r\n");
      out.write("\t\t$('#totalAnimals').val(totalAnimals + '');\r\n");
      out.write("\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t/* 유효성 검사 */\r\n");
      out.write("\tfunction invalidAll() {\r\n");
      out.write("\t\tvar invalidAll = false;\r\n");
      out.write("        if (arrInvalid[0]) {\r\n");
      out.write("        \tconsole.log(\"id = \" + $('#id').val());\r\n");
      out.write("        \talert(\"아이디를 확인해주세요.\");\r\n");
      out.write("            return false;\r\n");
      out.write("        } else if (arrInvalid[1]) {\r\n");
      out.write("        \tconsole.log(\"password1 = \" + document.getElementById('password1').value);\r\n");
      out.write("        \tconsole.log(\"password2 = \" + document.getElementById('password2').value);\r\n");
      out.write("        \talert(\"비밀번호를 확인해주세요.\");\r\n");
      out.write("            return false;\r\n");
      out.write("        } else if (arrInvalid[2]) {\r\n");
      out.write("        \tconsole.log(\"name = \" + document.getElementById('name').value);\r\n");
      out.write("        \talert(\"이름을 확인해주세요.\");\r\n");
      out.write("            return false;\r\n");
      out.write("        } else if (document.getElementById('birthday').value == '') {\r\n");
      out.write("        \tconsole.log(\"birthday = \" + document.getElementById('birthday').value);\r\n");
      out.write("        \talert(\"생년월일을 확인해주세요.\");\r\n");
      out.write("            return false;\r\n");
      out.write("        } else if (arrInvalid[4]) {\r\n");
      out.write("        \tconsole.log(\"email = \" + document.getElementById('email').value);\r\n");
      out.write("        \tarrInvalid[3] = true;\r\n");
      out.write("        \talert(\"이메일 주소를 확인해주세요.\");\r\n");
      out.write("            return false;\r\n");
      out.write("        } else if (document.getElementById('mobile').value == '') {\r\n");
      out.write("        \tconsole.log(\"mobile = \" + document.getElementById('mobile').value);\r\n");
      out.write("            return false;\r\n");
      out.write("        } else if (document.getElementsValuesById('animals').value == '') {\r\n");
      out.write("        \tarrInvalid[5] = true;\r\n");
      out.write("            return false;\r\n");
      out.write("        } else {\r\n");
      out.write("        \tarrInvalid[6] = true;\r\n");
      out.write("        \tfor(var i = 0; i < arrInvalid.length; i++) {\r\n");
      out.write("        \t\tif (arrInvalid[i]) {\r\n");
      out.write("        \t\t\tinvalidAll = true;\r\n");
      out.write("        \t\t}\r\n");
      out.write("        \t}\r\n");
      out.write("        \tif (invalidAll) {\r\n");
      out.write("\t        \treturn true;\r\n");
      out.write("        \t} else {\r\n");
      out.write("        \t\treturn false;\t\r\n");
      out.write("        \t}\r\n");
      out.write("        }\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div class=\"container\">\r\n");
      out.write("\t\t");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>멍멍이의 하루</title>\r\n");
      out.write("<link href=\"");
      if (_jspx_meth_c_005furl_005f0(_jspx_page_context))
        return;
      out.write("\"\r\n");
      out.write("\trel=\"stylesheet\">\r\n");
      out.write("<link href=\"");
      if (_jspx_meth_c_005furl_005f1(_jspx_page_context))
        return;
      out.write("\"\r\n");
      out.write("\trel=\"stylesheet\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<header>\r\n");
      out.write("\t\t<div class=\"container\">\r\n");
      out.write("\t\t<div class =\"header\">\r\n");
      out.write("\t\t<h1>\r\n");
      out.write("\t\t\t<a href=\"aniHotel\">멍멍이의 하루</a>\r\n");
      out.write("\t\t</h1>\r\n");
      out.write("\t\t<h2 class=\"hide\">대메뉴</h2>\r\n");
      out.write("\t\t<h2 class=\"hide\">로그인메뉴</h2>\r\n");
      out.write("\t\t<nav class=\"spot\">\r\n");
      out.write("\t\t\t<ul>\r\n");
      out.write("\t\t\t\t");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t\t\t");
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t</ul>\r\n");
      out.write("\t\t</nav>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class =\"nav\">\r\n");
      out.write("\t\t\t<nav class=\"lnb\">\r\n");
      out.write("\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t<li><a href=\"practice\">메뉴1</a></li>\r\n");
      out.write("\t\t\t\t\t<li><a href=\"board\">메뉴2</a></li>\r\n");
      out.write("\t\t\t\t\t<li><a href=\"practice2\">메뉴3</a></li>\r\n");
      out.write("\t\t\t\t\t<li><a href=\"#a\">메뉴4</a></li>\r\n");
      out.write("\t\t\t\t</ul>\r\n");
      out.write("\t\t\t</nav>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</header>\t\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("\t\t<div class=\"content\">\r\n");
      out.write("\t\t\t<h1 style=\"text-align: center; color: black;\">회원가입</h1>\r\n");
      out.write("\t\t\t<div class=\"main\">\r\n");
      out.write("\t\t\t\t<form action=\"member/join\" method=\"post\" id=\"userInfo\" name=\"userInfo\" onsubmit=\"return invalidAll()\"> <!-- 회원가입 버튼 클릭 이벤트 : 유효성 검사 -->\r\n");
      out.write("\t\t\t\t\t<div class=\"menu\">\r\n");
      out.write("\t\t\t\t\t\t<label>아이디</label> <input type=\"text\" id=\"id\" name=\"id\" placeholder=\"ID\" required>\r\n");
      out.write("\t\t\t\t\t\t<div id=\"id_check\"></div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"menu\">\r\n");
      out.write("\t\t\t\t\t\t<label>비밀번호</label> <input type=\"password\" id=\"password1\" name=\"password\" placeholder=\"password\" required>\r\n");
      out.write("\t\t\t\t\t\t<div id=\"password1_check\"></div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"menu\">\r\n");
      out.write("\t\t\t\t\t\t<label>비밀번호 확인</label> <input type=\"password\" id=\"password2\" name=\"password2\" placeholder=\"confirm password\" required>\r\n");
      out.write("\t\t\t\t\t\t<div id=\"password2_check\"></div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"menu\">\r\n");
      out.write("\t\t\t\t\t\t<label>이름</label> <input type=\"text\" id=\"name\" name=\"name\" \tplaceholder=\"name\" required>\r\n");
      out.write("\t\t\t\t\t\t<div id=\"name_check\"></div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"menu\">\r\n");
      out.write("\t\t\t\t\t\t<label>생년월일</label> <input type=\"date\" id=\"birthday\" name=\"birthday\">\r\n");
      out.write("\t\t\t\t\t\t<div id=\"birthday_check\"></div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"menu\">\r\n");
      out.write("\t\t\t\t\t\t<label>이메일</label> <input type=\"email\" id=\"email\" name=\"email\" placeholder=\"email\" required>\r\n");
      out.write("\t\t\t\t\t\t<div id=\"email_check\"></div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"menu\">\r\n");
      out.write("\t\t\t\t\t\t<label>휴대폰 번호</label> <input type=\"tel\" id=\"mobile\" name=\"contact\" placeholder=\"phone number\">\r\n");
      out.write("\t\t\t\t\t\t<div id=\"mobile_check\"></div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"menu\">\r\n");
      out.write("\t\t\t\t\t\t<fieldset>\r\n");
      out.write("\t\t\t\t\t\t\t<legend>반려동물 종류</legend>\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"animal1\" name=\"animal\" value=\"개\">개\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"animal2\" name=\"animal\" value=\"고양이\">고양이\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"animal3\" name=\"animal\">기타 <input\r\n");
      out.write("\t\t\t\t\t\t\t\ttype=\"text\" id=\"animal4\" name=\"animal4\" disabled> <input\r\n");
      out.write("\t\t\t\t\t\t\t\ttype=\"hidden\" id=\"totalAnimals\" name=\"animals\">\r\n");
      out.write("\t\t\t\t\t\t</fieldset>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"menu\">\r\n");
      out.write("\t\t\t\t\t\t<label>비고</label> <input type=\"text\" id=\"note\" name=\"note\">\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t<input type=\"hidden\" id=\"point\" name=\"point\" value=\"0\"> <!-- 기본 0포인트 -->\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t<input type=\"hidden\" id=\"authority\" name=\"authority\" value=\"2\"> <!-- 1:관리자, 2:개인회원, 3:업체회원 -->\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t<input type=\"submit\" id=\"userJoin\" value=\"회원가입\">\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</form>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"footer\">\r\n");
      out.write("\t\t\t<h1>footer</h1>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005furl_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f0 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f0_reused = false;
    try {
      _jspx_th_c_005furl_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f0.setParent(null);
      // /WEB-INF/views/member/header.jspf(10,12) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f0.setValue("/resources/css/default.css");
      int _jspx_eval_c_005furl_005f0 = _jspx_th_c_005furl_005f0.doStartTag();
      if (_jspx_th_c_005furl_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f0);
      _jspx_th_c_005furl_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f0, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f1 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f1_reused = false;
    try {
      _jspx_th_c_005furl_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f1.setParent(null);
      // /WEB-INF/views/member/header.jspf(12,12) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f1.setValue("/resources/css/header.css");
      int _jspx_eval_c_005furl_005f1 = _jspx_th_c_005furl_005f1.doStartTag();
      if (_jspx_th_c_005furl_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f1);
      _jspx_th_c_005furl_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f1, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/views/member/header.jspf(26,4) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${empty SessionId }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t\t\t<li><a href=\"login\">로그인</a></li>\r\n");
          out.write("\t\t\t\t\t<li><a href=\"userJoinus\">회원가입</a></li>\r\n");
          out.write("\t\t\t\t");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent(null);
      // /WEB-INF/views/member/header.jspf(30,4) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty SessionId }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t\t\t<li><a href=\"MyPageSelect\">내정보</a></li>\r\n");
          out.write("\t\t\t\t\t<li><a href=\"logout\">로그아웃</a></li>\r\n");
          out.write("\t\t\t\t");
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }
}
