<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Annotation 기반의 AOP 기능 사용 -->
	<aop:aspectj-autoproxy />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<context:component-scan
		base-package="ani.project.hotel" />
	
	<!-- 뒤로가기 캐쉬 삭제 설정 코드 -->
   <interceptors>
      <beans:bean id="webContentInterceptor" class="org.springframework.web.servlet.mvc.WebContentInterceptor">
         <beans:property name="cacheSeconds" value="0"></beans:property>
         <beans:property name="useExpiresHeader" value="true"></beans:property>
         <beans:property name="useCacheControlHeader" value="true"></beans:property>
         <beans:property name="useCacheControlNoStore" value="true"></beans:property>
      </beans:bean>
   </interceptors>
   
      <!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
   
   <context:component-scan base-package="ani.project.hotel" />
   
   <!-- 문자열 리소스를 bean으로 추가 -->
	<!-- String uploadPath = new String("경로"); -->
	<beans:bean id="uploadPath" class="java.lang.String">
		<beans:constructor-arg value="C:\\Study\\FileUploadTest">
		</beans:constructor-arg>
	</beans:bean>
   
   <!-- DispatcherServlet이 MultipartResolver를 사용 : 
		form 양식에서 multipart/form-data 타입을 처리하기 위한 클래스 -->
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 파일 업로드 최대 용량 설정 : 1024 * 1024 * 10B = 10MB -->
		<beans:property name="maxUploadSize" value="10485760"></beans:property>
	</beans:bean>
	
		<beans:bean id="update"
		class="ani.project.hotel.Interceptor.UpdateInterctptor">
	</beans:bean>
	
	<interceptors>
		<interceptor>

			<mapping path="/member/accommUpdate"/>
			<mapping path="/member/update"/>
			<mapping path="/product/register"/>
			<mapping path="/product/myHotelList"/>
			<mapping path="/product/list"/>
			<mapping path="/member/updatePassword"/>
			<mapping path="/member/reservationList"/>
			<mapping path="/member/delete"/>
			<mapping path="/letter/list"/>
			<mapping path="/hotelboard/register"/>
			<mapping path="/admin/checklist"/>
			<beans:ref bean="update"/>
		</interceptor>
	</interceptors>
</beans:beans>
